#!/bin/csh
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#   TROPICAL STORM DETECTION 
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#===============================================================
# --- CHECK ARGUMENTS
#===============================================================

set nargin = $#argv
set xdir = "~/RUNWORKFLOW/tstorms"

if ($nargin < 4) then
    echo
    echo "USAGE: " $0 " <inputfile> <outputdir> <exp> <year> <month> (for wrf)"
    echo
    echo "ARGUMENTS:"
    echo "\t<inputfile>: full path to input netCDF file"
    echo
    echo "\t<outputdir>: full path to output directory for multiple files; will be created if it does not exist"
    echo
    exit -1
else
    set fin = $1
    set dir_out = $2
    set exp = $3
    set year = $4
    if ($nargin > 4) then
        set month = $5	
    endif
endif

echo "inputfile = " $fin
echo "outputdir = " $dir_out
echo "experiment = " $exp
echo "year = " $year

# n: only count potential tropical storms at isolated time steps
# y: after finding potential storms, link them into trajectories
set do_traj = y

# year, used as suffix for output files
#set year    = $1 

if ( ! -e $dir_out  ) mkdir -p $dir_out

#===============================================================
# --- SET SOME PATHNAMES
#===============================================================

echo "executabledir = " $xdir
set tstorms    = ${xdir}/source/tstorms/tstorms_drive.exe
set trajectory = ${xdir}/source/trajectory/trajectory.exe

# --- output data
if ($nargin > 4) then
    set fcyc  = ${dir_out}/cyclones_wrf_out_${exp}_${year}_${month}    # storm days
    set ftraj = ${dir_out}/traj_wrf_out_${exp}_${year}_${month}        # trajectories
    set ftrajf = ${dir_out}/traj_filt_wrf_out_${exp}_${year}_${month}        # trajectories
    set fori  = ${dir_out}/ori_wrf_out_${exp}_${year}_${month}         # initial positions
    set forif  = ${dir_out}/ori_filt_wrf_out_${exp}_${year}_${month}         # initial positions
    set fstat = ${dir_out}/traj_stat_wrf_out_${exp}_${year}_${month}  # total counts
else
    set fcyc  = ${dir_out}/cyclones_out_${exp}_${year}    # storm days
    set ftraj = ${dir_out}/traj_out_${exp}_${year}        # trajectories
    set ftrajf = ${dir_out}/traj_filt_out_${exp}_${year}        # trajectories
    set fori  = ${dir_out}/ori_out_${exp}_${year}         # initial positions
    set forif  = ${dir_out}/ori_filt_out_${exp}_${year}         # initial positions
    set fstat = ${dir_out}/traj_stat_out_${exp}_${year}  # total counts
endif

#===============================================================
# --- TROPICAL STORM DETECTION 
#===============================================================

# --- data extraction
echo ${fin}
# ncks options:
#	-v: extract variables
#	-h: suppresses history concatenatino
#	-A: overwrites output file without prompt
#	-c:

if (! -e ${dir_out}/test1.nc) then
ncks -v PSL,T200,T500,U850,UBOT,V850,VBOT,Z1000,Z200 ${fin} ${dir_out}/test1.nc
endif

if(! -e ${dir_out}/test2.nc) then
ncks -h -A -c ${dir_out}/test1.nc ${dir_out}/test2.nc
ncks -h -A    ${dir_out}/test1.nc ${dir_out}/test2.nc
endif

# --- set namelist

## orig nml_tstorms

#&nml_tstorms
#   crit_vort =  1.0E-4,
#   crit_dist =  4.0,  
#   crit_twc =  0.5,   
#   dist_twc =  5.0, 
#   crit_thick =  50.0,  
#   crit_psl = 400.0,
#   dist_psl =   5.0,
#   lat_bound_n =  40.0,
#   lat_bound_s = -40.0,
#   do_thickness = .false.,
#&end

if ( -e ${dir_out}/nml_input ) then
rm ${dir_out}/nml_input
endif

if ( ! -e $dir_out/nml_input  ) then
cat << eof > ${dir_out}/nml_input
 &nml_tstorms
   crit_vort =  1.0E-5,
   crit_dist =  8.0,  
   crit_twc =  0.5,   
   dist_twc =  8.0, 
   crit_thick =  70.0,  
   crit_psl = 400.0,
   dist_psl =  8.0,
   lat_bound_n = 60.0,
   lat_bound_s = 0.0,
   do_spline = .false.,
   do_thickness = .false., 
 &end
 &nml_indata
   fname = '${dir_out}/test2.nc',
   use_sfc_wnd = .true.,
   do_smoothing = .false.,
   do_thickness = .false.,
   atwc = 0.5,
 &end
eof
endif

# --- run program
echo " Running tstorms_drive.exe "
#$tstorms < ${dir_out}/nml_input
$tstorms ${dir_out}

# --- save output
if !( -e $fcyc ) then
    touch $fcyc
endif

# need to change this in the source code and recompile
if ( -e ${dir_out}/cyclones ) then
    cat ${dir_out}/cyclones >> $fcyc

# for now, just use current working directory
#if ( -e cyclones ) then
#    cat cyclones >> $fcyc
    echo "  OUTPUT ADDED TO: " $fcyc
else
    echo "   "
    echo "  BUMMER: JOB FAILED"
    echo "   "
    goto tixe
endif

rm -f ${dir_out}/test1.nc ${dir_out}/test2.nc
#rm -f tstorms.exe

#===============================================================
# --- TRAJECTORY ANALYSIS
#===============================================================
if ( $do_traj == y ) then

# --- get executable
#cp $trajectory  trajectory.exe

#rm -f    cyclones
#cp $fcyc ${dir_out}/cyclones

cp $fcyc ${dir_out}/cyclones

if ( -e ${dir_out}/nml_trajectory ) then
rm ${dir_out}/nml_trajectory
endif

if ( ! -e $dir_out/nml_trajectory  ) then
cat << eof > ${dir_out}/nml_trajectory
 &nml_trajectory
      wcrit =  5.0,
      rcrit =  1600.0,
     nwcrit =  4,
    do_filt = .false.,
 &end
eof
endif

#$trajectory < ${dir_out}/nml_trajectory
$trajectory ${dir_out}

head -16  ${dir_out}/stats

# move to output directory
mv   ${dir_out}/ori  $fori
mv  ${dir_out}/traj  $ftraj
mv ${dir_out}/stats  $fstat

if ( -e ${dir_out}/ori_filt ) then
mv ${dir_out}/ori_filt $forif
endif

if ( -e ${dir_out}/traj_filt ) then
mv ${dir_out}/traj_filt $ftrajf
endif

# delete copy of cyclones file
rm -f ${dir_out}/cyclones

endif
